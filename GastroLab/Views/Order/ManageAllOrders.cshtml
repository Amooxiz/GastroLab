@model IEnumerable<GastroLab.Application.ViewModels.OrderVM>

@{
    ViewData["Title"] = "Manage All Orders";
}

<h1>Manage orders</h1>

<div class="d-flex justify-content-end mb-3 align-items-center">
    <a asp-action="AddOrder" class="btn btn-link text-decoration-none">
        <i class="bi bi-plus-circle"></i> Create New
    </a>
</div>

<div class="table-responsive">
    <table class="table table-striped border" id="ordersTable">
        <thead>
            <tr>
                <th>Status</th>
                <th>Order Details</th>
                <th>Delivery Info</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in Model)
            {
                <tr id="order-row-@order.Id">
                    <!-- First Column: Status -->
                    <td>
                        @{
                            string badgeClass = order.Status.ToString() switch
                            {
                                "New" => "text-bg-primary",
                                "InProgress" => "text-bg-warning",
                                "Done" => "text-bg-success",
                                "OnTheWay" => "text-bg-dark",
                                _ => "text-bg-secondary"
                            };
                        }
                        <span class="badge rounded-pill @badgeClass">@order.Status</span>
                    </td>

                    <!-- Second Column: Order Details -->
                    <td>
                        @foreach (var product in order.products)
                        {
                            <div>
                                <strong>@product.Quantity x @product.Name</strong>
                                @if (product.ingredients != null && product.ingredients.Any())
                                {
                                    <span>(@string.Join(", ", product.ingredients.Select(i => i.Name)))</span>
                                }
                                @if (product.OrderOptions != null && product.OrderOptions.Any())
                                {
                                    <ul>
                                        @foreach (var optionSet in product.OrderOptions)
                                        {
                                            <li>- @optionSet.Option.Name</li>
                                        }
                                    </ul>
                                }
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(order.Comment))
                        {
                            <p><strong>Note:</strong> @order.Comment</p>
                        }
                    </td>

                    <!-- Third Column: Delivery Info -->
                    <td>
                        <div>
                            <strong>Created on:</strong> @order.CreationDate.ToString("dd.MM.yyyy HH:mm")<br />
                            @{
                                if (order.isScheduledDelivery)
                                {
                                    <strong>Scheduled delivery:</strong> @order.ScheduledDeliveryDate.Value.ToString("dd.MM.yyyy HH:mm")
                                    <br />

                                    var elapsedTime = order.ScheduledDeliveryDate.Value - DateTime.Now;
                                    var remainingMinutes = (int)Math.Ceiling(elapsedTime.TotalMinutes);

                                    // Ensure remaining minutes are not negative
                                    if (remainingMinutes < 0)
                                    {
                                        remainingMinutes = 0;
                                    }
                                    <strong>Remaining time: </strong>
                                    <span>@remainingMinutes min</span>
                                }
                                else
                                {
                                    var elapsedTime = DateTime.Now - order.CreationDate;
                                    var remainingMinutes = (int)Math.Ceiling(order.WaitingTime - elapsedTime.TotalMinutes);

                                    if (remainingMinutes < 0)
                                    {
                                        remainingMinutes = 0;
                                    }
                                    <strong>Remaining time: </strong>
                                    <span>@remainingMinutes min</span>
                                }
                            }
                            <br />
                            <strong>@order.DeliveryMethod</strong><br />
                            @if (order.DeliveryMethod == GastroLab.Domain.DBO.DeliveryMethod.Delivery && order.Address != null)
                            {
                                var FlatNumber = order.Address.FlatNumber != null ? "/" + order.Address.FlatNumber : "";
                                <p>@order.Address.City @order.Address.Street @order.Address.HouseNumber@FlatNumber</p>
                            }
                            else if (order.DeliveryMethod == GastroLab.Domain.DBO.DeliveryMethod.DineIn)
                            {
                                <strong>Table: </strong>
                                <span>@order.TableNr</span>
                            }
                            else // Pickup
                            {
                                if (!@order.isScheduledDelivery)
                                {
                                    <strong>Pickup time: </strong>
                                    <span>@((order.CreationDate + (TimeSpan.FromMinutes(order.WaitingTime))).ToString("dd.MM.yyyy HH:mm"))</span>
                                }
                            }
                        </div>
                    </td>

                    <!-- Fourth Column: Total Price and Actions -->
                    <td>
                        <div>
                            <strong>Total Price:</strong> @order.TotalPrice.ToString("F2") PLN
                        </div>
                        <div class="mt-2">
                            @if (order.Status == GastroLab.Domain.DBO.OrderStatus.Done && order.DeliveryMethod != GastroLab.Domain.DBO.DeliveryMethod.Delivery)
                            {
                                <button class="btn btn-sm btn-success finish-order-button"
                                        data-order-id="@order.Id">
                                    <i class="bi bi-check-circle"></i> Finish
                                </button>
                            }
                            else
                            {
                                <a asp-action="EditOrder" asp-route-id="@order.Id" class="btn btn-sm btn-warning me-2">
                                    <i class="bi bi-pencil-square"></i> Edit
                                </a>
                            }
                            <a asp-action="DeleteOrder" asp-route-id="@order.Id" class="btn btn-sm btn-danger">
                                <i class="bi bi-trash3"></i> Delete
                            </a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const ordersTable = document.getElementById('ordersTable');

            ordersTable.addEventListener('click', function (event) {
                const button = event.target.closest('.finish-order-button');
                if (button) {
                    const orderId = button.getAttribute('data-order-id');
                    if (confirm('Are you sure you want to finish this order?')) {
                        fetch('/Order/ChangeStatusOfOrder', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                OrderId: parseInt(orderId),
                                OrderStatus: "Finished"
                            })
                        })
                        .then(response => {
                            if (response.ok) {
                                document.getElementById(`order-row-${orderId}`).remove();
                                alert('Order has been finished successfully!');
                            } else {
                                alert('Failed to finish the order. Please try again.');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert('An error occurred while finishing the order.');
                        });
                    }
                }
            });
        });
    </script>
}
