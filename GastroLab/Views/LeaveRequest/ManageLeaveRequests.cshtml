@model IEnumerable<GastroLab.Application.ViewModels.LeaveRequestVM>
@using GastroLab.Domain.DBO;
@{
    ViewBag.Title = "Manage Leave Requests";
}

<h1>Manage leave requests</h1>

<div class="d-flex justify-content-between align-items-center">
    <!-- Radio Button Group -->
    <form method="get" asp-action="ManageLeaveRequests" class="mb-0">
        <div class="btn-group" role="group" aria-label="Leave Request Status">
            <input type="radio" class="btn-check" name="status" id="pending" value="Pending" autocomplete="off" @(ViewBag.Status == "Pending" ? "checked" : "") onchange="this.form.submit();">
            <label class="btn btn-outline-primary" for="pending">Pending</label>

            <input type="radio" class="btn-check" name="status" id="resolved" value="Resolved" autocomplete="off" @(ViewBag.Status == "Resolved" ? "checked" : "") onchange="this.form.submit();">
            <label class="btn btn-outline-primary" for="resolved">Resolved</label>
        </div>
    </form>

    <!-- Apply for Leave Button is removed -->
</div>

<!-- Leave Requests Table -->
<table class="table mt-3">
    <thead>
        <tr>
            <th>Status</th>
            <th>Description</th>
            <th>Period of Absence</th>
            <th>Creation Date</th>
            <th>Applicant</th>
            <th></th> <!-- For Buttons -->
        </tr>
    </thead>
    <tbody>
        @foreach (var request in Model)
        {
            <tr>
                <td>
                    @{
                        string badgeClass = "";
                        string statusText = request.Status.ToString();

                        switch (request.Status)
                        {
                            case LeaveRequestStatus.Pending:
                                badgeClass = "badge rounded-pill text-bg-warning";
                                break;
                            case LeaveRequestStatus.Accepted:
                                badgeClass = "badge rounded-pill text-bg-success";
                                break;
                            case LeaveRequestStatus.Rejected:
                                badgeClass = "badge rounded-pill text-bg-danger";
                                break;
                            default:
                                badgeClass = "badge rounded-pill text-bg-secondary";
                                break;
                        }
                    }
                    <span class="@badgeClass">@statusText</span>
                </td>
                <td>@request.Desciption</td>
                <td>@request.DateFrom.ToShortDateString() - @request.DateTo.ToShortDateString()</td>
                <td>@request.CreatedOn.ToShortDateString()</td>
                <td>@request.UserVM?.UserName</td>
                <td>
                    <a asp-action="Details" asp-route-id="@request.Id" class="btn btn-primary btn-sm">Details</a>
                    @if (request.Status == LeaveRequestStatus.Pending)
                    {
                        <a asp-action="Consider" asp-route-id="@request.Id" class="btn btn-secondary btn-sm">Consider</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
