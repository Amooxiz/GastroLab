@model GastroLab.Application.ViewModels.LeaveRequestVM

@{
    ViewData["Title"] = "Leave Request Details";
}

<h1>Leave Request Details</h1>

<hr />

<div class="card mb-3 bg-light">
    <div class="card-body">
        <dl class="row">
            <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Status)</dt>
            <dd class="col-sm-8">
                @{
                    string badgeClass = "";
                    string statusText = Model.Status.ToString();

                    switch (Model.Status)
                    {
                        case LeaveRequestStatus.Pending:
                            badgeClass = "badge rounded-pill text-bg-warning";
                            break;
                        case LeaveRequestStatus.Accepted:
                            badgeClass = "badge rounded-pill text-bg-success";
                            break;
                        case LeaveRequestStatus.Rejected:
                            badgeClass = "badge rounded-pill text-bg-danger";
                            break;
                        default:
                            badgeClass = "badge rounded-pill text-bg-secondary";
                            break;
                    }
                }
                <span class="@badgeClass">@statusText</span>
            </dd>

            <dt class="col-sm-4">Period of Absence</dt>
            <dd class="col-sm-8">
                @Model.DateFrom.ToShortDateString() - @Model.DateTo.ToShortDateString()
            </dd>

            <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Desciption)</dt>
            <dd class="col-sm-8">@Html.DisplayFor(model => model.Desciption)</dd>

            <dt class="col-sm-4">Applicant</dt>
            <dd class="col-sm-8">@Model.UserVM?.UserName</dd>

            <dt class="col-sm-4">Creation Date</dt>
            <dd class="col-sm-8">@Model.CreatedOn.ToShortDateString() @Model.CreatedOn.ToShortTimeString()</dd>

            <dt class="col-sm-12 mt-3"><hr /></dt>

            <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Feedback)</dt>
            <dd class="col-sm-8">
                @{
                    if (string.IsNullOrEmpty(Model.Feedback))
                    {
                        <span class="text-muted">No Feedback</span>
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.Feedback)
                    }
                }
            </dd>

            <dt class="col-sm-4">@Html.DisplayNameFor(model => model.ResolvedOn)</dt>
            <dd class="col-sm-8">
                @{
                    if (Model.ResolvedOn == default(DateTime))
                    {
                        <span class="text-muted">Not Resolved Yet</span>
                    }
                    else
                    {
                        <span>@Model.ResolvedOn.ToShortDateString() @Model.ResolvedOn.ToShortTimeString()</span>
                    }
                }
            </dd>
        </dl>
    </div>
</div>

<div class="mt-3">

    @if (User.IsInRole("Admin") || User.IsInRole("Director"))
    {
        if (Model.Status == LeaveRequestStatus.Pending)
        {
            <a asp-action="Consider" asp-route-id="@Model.Id" class="btn btn-primary">Consider</a>
        }
        <a asp-action="ManageLeaveRequests" class="btn btn-secondary">Back to List</a>
    }
    else
    {
        if (Model.Status == LeaveRequestStatus.Pending)
        {
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">Edit</a>
        }
        <a asp-action="MyLeaveRequests" class="btn btn-secondary">Back to List</a>
    }
</div>
